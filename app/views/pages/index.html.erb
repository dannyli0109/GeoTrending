
<div class="container">
  <div id="map"></div>
  <ul class="trend-list"></ul>
  <canvas id="chart" width="400" height="400"></canvas>

  <div class="row tweets-container"></div>

  <div class="row news-container">
  </div>

</div>

<script id="tweets-result-template" type="template">
<div class="col-sm-6 col-lg-4">

<blockquote class="twitter-tweet"><a href={{ url }}</a>
</blockquote>
</div>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
</script>

<script id="news-result-template" type="template">
<div class="col-sm-6 col-lg-4">
<div class="thumbnail" style="height:300px">
<img src={{ image_url }}>
<div class="caption">
<a href={{ url }}>{{ title }}</a>
</div>
</div>
</div>
</script>
<script>

// This example creates a simple polygon representing the Bermuda Triangle.
var states = []
states.push({
  name: "New South Wales",
  capital: "Sydney",
  color: "red",
  woeid: 1105779,
  geocode: "-33.8688,151.2093"
})

states.push({
  name: "Victoria",
  capital: "Melbourne",
  color: "blue",
  woeid: 1103816,
  geocode: "-37.8136,144.9631"

})

states.push({
  name: "Queensland",
  capital: "Brisbane",
  color: "green",
  woeid: 1100661,
  geocode: "-27.4698,153.0251"
})

states.push({
  name: "South Australia",
  capital: "Adelaide",
  color: "yellow",
  woeid: 1099805,
  geocode: "-34.9285,138.6007"
})

states.push({
  name: "Western Australia",
  capital: "Perth",
  color: "orange",
  woeid: 1098081,
  geocode: "-31.9505,115.8605"
})

states.push({
  name: "Tasmaina",
  capital: "Hobart",
  color: "purple",
  woeid: 1102670,
  geocode: "-42.8821,147.3272"

})

states.push({
  name: "Northern Territory",
  capital: "Darwin",
  color: "lime",
  woeid: 1101597,
  geocode: "-12.4634,130.8456"
})

states.push({
  name: "Australian Capital Territory",
  capital: "Canberra",
  color: "black",
  woeid: 1100968,
  geocode: "-35.2809,149.1300"
})


var currentState
var trend


var randomColorGenerator = function () {
  return 'rgba(' +
  (Math.round(Math.random() * 255)) + ", " +
  (Math.round(Math.random() * 255)) + ", " +
  (Math.round(Math.random() * 255)) + ", 0.2)"
};
var canvas = document.getElementById("chart")
var ctx = canvas.getContext('2d');
var chart

function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    zoom: 4,
    center: {lat: -25.2744, lng: 133.7751},
    mapTypeId: 'terrain'
  });

  map.data.loadGeoJson('https://raw.githubusercontent.com/rowanhogan/australian-states/master/states.geojson');
  // map.data.setStyle({
  //   fillColor: 'green',
  //   strokeWeight: 1
  //
  // });

  map.data.setStyle(function(feature) {

    var state = states[parseInt(feature.f.STATE_CODE)-1]
    return {
      fillColor: state.color,
      strokeWeight: 1
    }
  })


  map.data.addListener('click', function(event) {
    var state = states[parseInt(event.feature.f.STATE_CODE)-1]
    currentState = state.capital
    // console.log(state.capital)


    $.ajax({
      url: '/api/trends/' + state.woeid
    }).done(function(res){
      if (chart) {
        chart.destroy()
      }

      $(".trend-list").html("")
      var backgroundColor = []
      var values = []
      var keys = []
      var cleanNames = []
      var nameAlphabets = []

      res.forEach(function(element) {
        // $(".trend-list").append($("<li>" + '<a href="/pages/'+ element["name"] + '">' + element["name"] + "</a>" + "<p>" + element["volume"] + "</p>" + "</li>"))

        values.push(element["volume"])
        keys.push(element["name"])
        cleanNames.push(element["name_clean"])
        nameAlphabets.push(element["name_alphabets"])
        //console.log(values);
        //console.log(keys);
        backgroundColor.push(randomColorGenerator())

      })

      var data = {
        datasets: [{
          data: values,
          backgroundColor: backgroundColor
        }],
        labels: keys
      };

      chart = new Chart(ctx, {
        data: data,
        type: 'doughnut'
      });

      $("#chart").click(function(evt){
        var activePoints = chart.getElementAtEvent(evt);
        var name = cleanNames[activePoints["0"]._index];
        trend = activePoints["0"]._model.label

        var nameAlphabet = nameAlphabets[activePoints["0"]._index]
        debugger
        var $newsContainer = $(".news-container")

        var $tweetsContainer = $(".tweets-container")

        console.log(currentState)
        console.log(trend)
        var settings = {
          method: "POST",
          url: "/user/1/histories",
          data: {
            history: {
              name: trend,
              location: currentState
            }
          }
        }

        $.ajax({ url: "/api/news/" + name }).done(function(res) {
          $newsContainer.html("")
          if (res.length <= 0) {
            $newsContainer.append($("<h1>No Result Found</h1>"))
          }
          res.forEach(function(element) {
            var source = $('#news-result-template').html()
            var template = Handlebars.compile(source)
            $newsContainer.append(template(element))
          })
          $("img")
          .on('load', function() { console.log("image loaded correctly"); })
          .on('error', function(event) { console.log($(event.target).attr("src","https://extension.ucsd.edu/UCSDExtension/media/UCSDExtensionsMedia/placeholder.png")); });

        })

        $.ajax({ url: "/api/tweets" + "?name=" + nameAlphabet + "&geocode=" + state["geocode"] }).
        done(function(res) {

          $tweetsContainer.html("")
          if (res["statuses"].length <= 0) {
            $tweetsContainer.append($("<h1>No Result Found</h1>"))
          }


          var i = 0
          res["statuses"].forEach(function(element) {
            if (i < 6) {
              var screenName = element["user"]["screen_name"]
              var idStr = element["id_str"]
              var source = $('#tweets-result-template').html()
              var template = Handlebars.compile(source)
              var a = {url: "https://twitter.com/" + screenName + "/status/" + idStr}
              $tweetsContainer.append(template(a))
              i += 1
            }

          })
        })

      })

    })//ajax

  });

}



</script>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCKgnMYlOhK2bPvXLb1K4DwTDfNpCs8s2c&callback=initMap">
</script>
